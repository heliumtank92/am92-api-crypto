var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ApiCryptoConfig.html",[0,1.311,1,1.311]],["body/interfaces/ApiCryptoConfig.html",[1,1.388,2,1.388,3,0.964,4,1.156,5,0.964,6,0.655,7,1.265,8,3.025,9,3.025,10,3.025,11,3.025,12,3.025,13,3.025,14,3.025,15,3.025,16,1.162,17,1.982,18,0.069,19,1.821,20,3.483,21,2.201,22,3.483,23,2.201,24,0.051,25,0.051]],["title/interfaces/ApiCryptoDebug.html",[0,1.311,26,1.311]],["body/interfaces/ApiCryptoDebug.html",[2,1.807,3,1.255,4,1.506,5,1.255,6,0.852,7,1.492,16,0.852,18,0.065,24,0.06,25,0.06,26,1.807,27,3.412,28,4.108]],["title/classes/ApiCryptoError.html",[29,1.311,30,1.311]],["body/classes/ApiCryptoError.html",[3,0.818,4,0.982,6,0.556,7,1.133,16,1.034,17,1.682,18,0.066,19,1.178,24,0.046,25,0.046,29,1.178,30,2.019,31,2.253,32,1.753,33,1.971,34,3.619,35,2.253,36,2.783,37,3.119,38,2.253,39,2.253,40,4.193,41,3.119,42,3.119,43,2.261,44,1.971,45,2.261,46,3.119,47,1.971,48,2.253,49,2.253,50,3.119,51,1.559,52,2.253,53,1.753,54,1.753,55,2.253,56,3.119,57,2.253,58,2.253,59,2.253,60,2.253,61,1.971,62,1.971,63,3.119,64,3.119,65,3.119,66,1.753,67,1.753,68,2.427,69,2.253,70,1.753,71,2.253,72,1.753,73,1.753,74,1.753]],["title/interfaces/ApiCryptoErrorMap.html",[0,1.311,51,1.093]],["body/interfaces/ApiCryptoErrorMap.html",[2,1.454,3,1.01,4,1.212,5,1.01,6,0.686,7,1.304,16,0.981,17,1.941,18,0.064,19,1.877,24,0.053,25,0.053,30,2.079,33,1.757,34,3.094,36,3.094,43,2.816,44,2.513,45,2.656,47,2.513,51,1.212,66,3.094,68,2.794,72,2.164,73,2.164,75,2.781,76,2.781,77,2.781,78,2.781,79,1.757]],["title/coverage.html",[80,2.611]],["body/coverage.html",[0,1.347,1,0.679,3,0.472,4,0.566,5,1.35,16,0.32,18,0.071,24,0.03,25,0.03,26,0.679,29,0.679,30,0.679,32,1.011,51,0.566,79,0.821,80,1.011,81,1.299,82,1.299,83,2.421,84,3.5,85,1.011,86,4.793,87,4.783,88,0.821,89,0.821,90,0.821,91,1.628,92,1.628,93,4.557,94,0.821,95,2.067,96,1.299,97,1.609,98,1.011,99,1.011,100,2.787,101,1.011,102,1.011,103,1.011,104,1.011,105,1.011,106,1.011,107,2.004,108,1.011,109,1.011,110,1.011,111,0.821,112,1.011,113,1.299,114,1.299,115,1.299,116,1.011,117,1.011,118,1.011,119,1.011,120,1.011,121,2.35,122,1.011,123,1.307,124,1.307,125,1.011,126,0.679,127,2.652,128,1.011,129,1.011,130,0.821,131,0.821,132,0.821,133,0.821,134,0.821,135,0.679,136,1.011,137,1.011,138,1.299,139,1.011]],["title/dependencies.html",[140,1.656,141,2.332]],["body/dependencies.html",[18,0.07,24,0.06,25,0.06,141,2.646,142,3.4,143,2.572,144,3.4,145,3.4,146,3.4,147,3.4,148,3.4,149,3.4,150,3.4,151,3.4,152,3.4]],["title/miscellaneous/functions.html",[153,0.773,154,2.332]],["body/miscellaneous/functions.html",[6,0.293,16,1.058,17,2.061,18,0.07,19,1.006,24,0.028,25,0.028,43,2.732,53,3.364,54,3.364,61,2.629,62,2.629,83,0.751,85,1.498,88,1.216,89,1.216,90,1.216,91,2.074,92,2.274,94,0.751,111,0.751,112,1.498,121,0.751,122,1.498,123,1.763,124,1.763,127,0.751,128,1.888,129,1.888,130,1.216,131,1.216,132,1.216,133,1.216,134,1.216,153,0.431,154,0.924,155,2.385,156,3.04,157,2.553,158,0.924,159,1.188,160,3.982,161,1.188,162,1.188,163,4.16,164,4.049,165,1.925,166,2.426,167,1.188,168,1.925,169,1.188,170,1.188,171,1.925,172,1.188,173,2.972,174,1.188,175,1.188,176,1.188,177,1.188,178,1.188,179,1.188,180,1.925,181,1.188,182,1.188,183,1.188,184,1.216,185,1.188,186,1.188,187,1.188]],["title/index.html",[6,0.525,188,1.656,189,1.656]],["body/index.html",[18,0.062,24,0.058,25,0.058,126,1.672,135,1.672,139,2.488,143,2.793,190,3.92,191,3.197,192,3.92,193,3.92,194,3.92,195,2.05,196,3.197,197,3.197,198,3.197,199,3.197,200,2.488,201,3.197,202,2.488,203,3.197,204,2.021,205,2.021,206,2.021]],["title/license.html",[188,1.656,189,1.656,195,1.113]],["body/license.html",[3,0.877,18,0.048,24,0.048,25,0.048,74,1.879,195,1.262,200,1.879,202,1.879,206,1.526,207,3.708,208,2.414,209,2.414,210,2.414,211,2.414,212,3.27,213,2.414,214,2.414,215,2.414,216,2.414,217,2.414,218,2.414,219,3.27,220,4.515,221,2.414,222,2.414,223,3.708,224,2.414,225,3.27,226,2.414,227,2.414,228,3.27,229,2.414,230,2.414,231,2.414,232,2.414,233,2.414,234,2.414,235,2.414,236,3.27,237,2.414,238,2.414,239,2.414,240,2.414,241,2.414,242,2.414,243,2.414,244,3.27,245,3.27,246,2.414,247,2.414,248,2.414,249,2.414,250,2.414,251,2.414,252,2.414,253,2.414,254,2.414,255,2.414,256,2.414,257,2.414,258,2.414,259,2.414,260,2.414,261,2.414,262,2.414,263,2.414,264,2.414,265,2.414,266,2.414,267,2.414,268,2.414,269,2.414,270,2.414,271,2.414,272,2.414,273,2.414,274,2.414,275,2.414,276,2.414]],["title/modules.html",[277,2.611]],["body/modules.html",[18,0.063,24,0.063,25,0.063,277,2.908]],["title/overview.html",[278,2.611]],["body/overview.html",[2,1.91,18,0.062,24,0.062,25,0.062,29,1.91,278,2.842,279,2.842,280,3.652]],["title/properties.html",[7,1.089,140,1.656]],["body/properties.html",[7,1.111,18,0.069,24,0.056,25,0.056,33,1.934,70,2.381,126,1.6,135,1.6,143,2.627,195,1.6,204,2.411,205,2.411,206,1.934,281,3.06,282,3.06,283,4.352,284,3.06,285,3.06,286,3.06,287,3.06,288,3.06,289,3.06,290,3.06,291,3.06,292,3.06,293,3.06,294,3.06,295,3.06,296,3.06]],["title/miscellaneous/typealiases.html",[153,0.773,297,2.997]],["body/miscellaneous/typealiases.html",[5,1.167,6,0.793,16,1.048,18,0.058,21,2.485,23,2.485,24,0.058,25,0.058,84,2.5,111,2.031,153,1.167,158,3.06,184,2.485,298,3.213,299,3.932,300,3.06,301,3.445,302,3.932,303,3.932]],["title/miscellaneous/variables.html",[153,0.773,304,2.332]],["body/miscellaneous/variables.html",[1,0.655,5,0.455,6,0.309,8,0.975,9,0.975,10,0.975,11,0.975,12,0.975,13,0.975,14,0.975,15,0.975,16,1.05,17,0.546,18,0.072,21,0.792,23,0.792,24,0.03,25,0.03,26,0.655,27,1.563,44,1.589,45,1.589,47,1.589,51,1.096,61,2.841,62,2.841,67,1.957,79,1.589,83,0.792,88,0.792,89,0.792,90,0.792,91,1.589,92,1.589,94,1.27,97,0.975,98,2.451,99,1.563,100,0.975,101,1.957,102,1.563,103,1.563,104,1.563,105,1.957,106,1.563,107,0.975,108,1.563,109,1.563,110,1.563,116,1.563,117,1.563,118,1.563,119,1.563,120,1.563,121,0.792,123,1.27,124,1.27,125,1.563,126,1.05,127,0.792,130,0.792,131,0.792,132,0.792,133,0.792,134,0.792,135,1.05,136,1.957,137,0.975,153,0.455,155,1.957,156,1.957,157,1.957,173,1.563,184,0.792,204,0.792,205,1.27,279,0.975,300,0.975,301,2.451,304,0.975,305,2.009,306,3.531,307,2.515,308,1.253,309,1.253,310,1.253,311,1.253,312,1.253,313,2.009,314,1.253,315,2.009,316,1.253,317,1.253,318,1.253,319,1.253,320,1.253,321,1.253,322,1.253,323,1.253,324,1.253,325,1.253,326,1.253,327,1.253,328,1.253,329,1.253,330,1.253,331,1.253,332,1.253,333,1.253,334,1.253,335,1.253,336,1.253,337,1.253,338,1.253,339,1.253,340,1.253,341,1.253,342,1.253,343,1.253,344,1.253,345,1.253,346,1.253,347,1.253,348,1.253,349,1.253,350,1.253,351,1.253,352,2.515,353,1.253,354,1.253,355,1.253,356,1.253,357,1.253,358,1.253,359,1.253,360,1.253,361,1.253]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":86,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":87,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":113,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":114,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":279,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":95,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":282,"title":{},"body":{"properties.html":{}}}],["2.0.3",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["2.30.1",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":209,"title":{},"body":{"license.html":{}}}],["256",{"_index":288,"title":{},"body":{"properties.html":{}}}],["3",{"_index":280,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":115,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9,]*);?`).exec(debug",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":96,"title":{},"body":{"coverage.html":{}}}],["_generatekeypairandcache",{"_index":122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["_generatekeypairandcache(clientid",{"_index":159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_getkeyroationexpiry",{"_index":128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["_getplaintextkeyexpiry",{"_index":129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["_isapicryptoerror",{"_index":41,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["_iscustomerror",{"_index":42,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["_validateclientid",{"_index":85,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["_validateclientid(clientid",{"_index":176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["above",{"_index":243,"title":{},"body":{"license.html":{}}}],["account",{"_index":211,"title":{},"body":{"license.html":{}}}],["action",{"_index":269,"title":{},"body":{"license.html":{}}}],["aes",{"_index":205,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["aeskeyobject",{"_index":299,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["agarwal",{"_index":203,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":298,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["am92/aes",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["am92/api",{"_index":190,"title":{},"body":{"index.html":{}}}],["am92/jose",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["am92/kms",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["am92/redis",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["and/or",{"_index":234,"title":{},"body":{"license.html":{}}}],["ankit",{"_index":200,"title":{},"body":{"index.html":{},"license.html":{}}}],["api",{"_index":283,"title":{},"body":{"properties.html":{}}}],["api_crypto_client_ids.split",{"_index":318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_kms_aws_key_id",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_kms_aws_region",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_kms_master_iv_hex",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_kms_master_key_hex",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_kms_type",{"_index":323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_mode",{"_index":316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_modes",{"_index":116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_crypto_redis_key_prefix",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_static_aes_key",{"_index":319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_static_private_key",{"_index":321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_static_public_key",{"_index":320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_type",{"_index":317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_crypto_types",{"_index":117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicrypto",{"_index":79,"title":{},"body":{"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicrypto::invalid_client_id",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicrypto::missing_encrypted_aes_key",{"_index":356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicrypto::private_key_not_found",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicryptoconfig",{"_index":1,"title":{"interfaces/ApiCryptoConfig.html":{}},"body":{"interfaces/ApiCryptoConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicryptodebug",{"_index":26,"title":{"interfaces/ApiCryptoDebug.html":{}},"body":{"interfaces/ApiCryptoDebug.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicryptodebugfeatures",{"_index":300,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apicryptoerror",{"_index":30,"title":{"classes/ApiCryptoError.html":{}},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{}}}],["apicryptoerrormap",{"_index":51,"title":{"interfaces/ApiCryptoErrorMap.html":{}},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicryptomodes",{"_index":21,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apicryptotypes",{"_index":23,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arising",{"_index":273,"title":{},"body":{"license.html":{}}}],["associated",{"_index":74,"title":{},"body":{"classes/ApiCryptoError.html":{},"license.html":{}}}],["async",{"_index":314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":262,"title":{},"body":{"license.html":{}}}],["aws_connection_config",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aws_key_id",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awskms",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["better",{"_index":59,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"interfaces/ApiCryptoDebug.html":{}}}],["c",{"_index":208,"title":{},"body":{"license.html":{}}}],["case",{"_index":38,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["cbc",{"_index":289,"title":{},"body":{"properties.html":{}}}],["charge",{"_index":216,"title":{},"body":{"license.html":{}}}],["ciphertextkey",{"_index":180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["claim",{"_index":265,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{"classes/ApiCryptoError.html":{}},"body":{"classes/ApiCryptoError.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":31,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["client",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client_ids",{"_index":8,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clientvalidator",{"_index":184,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":68,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["codes",{"_index":78,"title":{},"body":{"interfaces/ApiCryptoErrorMap.html":{}}}],["conditions",{"_index":242,"title":{},"body":{"license.html":{}}}],["config",{"_index":98,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":275,"title":{},"body":{"license.html":{}}}],["connection_config",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.fatal",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constantgenerator",{"_index":112,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["constantgenerator([...modes",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constantgenerator([...types",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constantgenerator(values",{"_index":186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["constructor(e",{"_index":49,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["content",{"_index":191,"title":{},"body":{"index.html":{}}}],["contract",{"_index":270,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":193,"title":{},"body":{"index.html":{}}}],["copies",{"_index":236,"title":{},"body":{"license.html":{}}}],["copy",{"_index":219,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":207,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":80,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":52,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["crypto",{"_index":143,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["crypto#readme",{"_index":293,"title":{},"body":{"properties.html":{}}}],["crypto.git",{"_index":296,"title":{},"body":{"properties.html":{}}}],["custom",{"_index":66,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["customizing",{"_index":76,"title":{},"body":{"interfaces/ApiCryptoErrorMap.html":{}}}],["customvalidateclient",{"_index":94,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":266,"title":{},"body":{"license.html":{}}}],["data",{"_index":182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deal",{"_index":222,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":276,"title":{},"body":{"license.html":{}}}],["debug",{"_index":101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug?.includes(`${debug_id",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug_enabled_features",{"_index":102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug_features",{"_index":118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debug_id",{"_index":103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debugall",{"_index":104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debugfeatures",{"_index":105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["debugfeatures[1",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debugfeatureslist",{"_index":106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decryptdata",{"_index":88,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decryptdata(payload",{"_index":177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decryption",{"_index":285,"title":{},"body":{"properties.html":{}}}],["decryptkey",{"_index":89,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["decryptkey(clientid",{"_index":179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":61,"title":{},"body":{"classes/ApiCryptoError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":141,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":33,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"properties.html":{}}}],["disablecrypto",{"_index":27,"title":{},"body":{"interfaces/ApiCryptoDebug.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":232,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"license.html":{}}}],["dynamic",{"_index":312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":55,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["emap",{"_index":50,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["encryptdata",{"_index":90,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["encryptdata(data",{"_index":181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypted",{"_index":355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encryptedaeskey",{"_index":162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptedkey",{"_index":168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryption",{"_index":284,"title":{},"body":{"properties.html":{}}}],["error",{"_index":34,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["error's",{"_index":69,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["errorcode",{"_index":44,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/variables.html":{}}}],["errorlogfunc",{"_index":99,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":261,"title":{},"body":{"license.html":{}}}],["example",{"_index":196,"title":{},"body":{"index.html":{}}}],["express",{"_index":252,"title":{},"body":{"license.html":{}}}],["extends",{"_index":39,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["false",{"_index":315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{}}}],["files",{"_index":221,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":257,"title":{},"body":{"license.html":{}}}],["flag",{"_index":64,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["following",{"_index":241,"title":{},"body":{"license.html":{}}}],["found",{"_index":358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":215,"title":{},"body":{"license.html":{}}}],["function",{"_index":84,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":154,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":239,"title":{},"body":{"license.html":{}}}],["gandhi",{"_index":201,"title":{},"body":{"index.html":{}}}],["getaeskey",{"_index":123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getaeskey(encryptedaeskey",{"_index":161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getaeskey(encryptedkey",{"_index":167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getencryptedprivatekey",{"_index":130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getencryptedprivatekey(clientid",{"_index":169,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getprivatekey",{"_index":124,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getprivatekey(clientid",{"_index":165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getpublickey",{"_index":91,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getpublickey(clientid",{"_index":166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":188,"title":{"index.html":{},"license.html":{}},"body":{}}],["git@github.com:heliumtank92/am92",{"_index":295,"title":{},"body":{"properties.html":{}}}],["granted",{"_index":214,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":213,"title":{},"body":{"license.html":{}}}],["holders",{"_index":263,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":291,"title":{},"body":{"properties.html":{}}}],["http",{"_index":72,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["https://github.com/heliumtank92/am92",{"_index":292,"title":{},"body":{"properties.html":{}}}],["id",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":81,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":65,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["implied",{"_index":253,"title":{},"body":{"license.html":{}}}],["included",{"_index":246,"title":{},"body":{"license.html":{}}}],["including",{"_index":225,"title":{},"body":{"license.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":92,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initialize(validateclient",{"_index":183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":198,"title":{},"body":{"index.html":{}}}],["installation",{"_index":192,"title":{},"body":{"index.html":{}}}],["instance",{"_index":36,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["int_config.api_crypto_key_rotation_in_days",{"_index":322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"interfaces/ApiCryptoErrorMap.html":{}},"body":{"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"interfaces/ApiCryptoErrorMap.html":{},"overview.html":{}}}],["invalid",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_client_id_error",{"_index":108,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jose",{"_index":204,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["jwe",{"_index":287,"title":{},"body":{"properties.html":{}}}],["key",{"_index":173,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["key_prefix",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key_rotation_in_days",{"_index":9,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["keymanager",{"_index":125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["keywords",{"_index":290,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":251,"title":{},"body":{"license.html":{}}}],["kms",{"_index":126,"title":{},"body":{"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["kms_config",{"_index":10,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["kmsconfig",{"_index":20,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{}}}],["liability",{"_index":267,"title":{},"body":{"license.html":{}}}],["liable",{"_index":264,"title":{},"body":{"license.html":{}}}],["license",{"_index":195,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["limitation",{"_index":226,"title":{},"body":{"license.html":{}}}],["limited",{"_index":254,"title":{},"body":{"license.html":{}}}],["literal",{"_index":303,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mapping",{"_index":75,"title":{},"body":{"interfaces/ApiCryptoErrorMap.html":{}}}],["master_iv_hex",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["master_key_hex",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":25,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mehul",{"_index":202,"title":{},"body":{"index.html":{},"license.html":{}}}],["merchantability",{"_index":256,"title":{},"body":{"license.html":{}}}],["merge",{"_index":230,"title":{},"body":{"license.html":{}}}],["message",{"_index":45,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":77,"title":{},"body":{"interfaces/ApiCryptoErrorMap.html":{}}}],["miscellaneous",{"_index":153,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["missing_encrypted_aes_key_error",{"_index":109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":206,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mode",{"_index":11,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["modes",{"_index":119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":229,"title":{},"body":{"license.html":{}}}],["modules",{"_index":277,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":54,"title":{},"body":{"classes/ApiCryptoError.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":70,"title":{},"body":{"classes/ApiCryptoError.html":{},"properties.html":{}}}],["nodekms",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":260,"title":{},"body":{"license.html":{}}}],["notice",{"_index":244,"title":{},"body":{"license.html":{}}}],["npm",{"_index":197,"title":{},"body":{"index.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":67,"title":{},"body":{"classes/ApiCryptoError.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":218,"title":{},"body":{"license.html":{}}}],["optional",{"_index":43,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":272,"title":{},"body":{"license.html":{}}}],["out",{"_index":274,"title":{},"body":{"license.html":{}}}],["overview",{"_index":278,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":140,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":53,"title":{},"body":{"classes/ApiCryptoError.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":258,"title":{},"body":{"license.html":{}}}],["payload",{"_index":178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permission",{"_index":212,"title":{},"body":{"license.html":{}}}],["permit",{"_index":237,"title":{},"body":{"license.html":{}}}],["person",{"_index":217,"title":{},"body":{"license.html":{}}}],["persons",{"_index":238,"title":{},"body":{"license.html":{}}}],["plaintextkey",{"_index":171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["portions",{"_index":248,"title":{},"body":{"license.html":{}}}],["private",{"_index":357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private_key_not_found_error",{"_index":110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["process.env",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":71,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["promise",{"_index":164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":7,"title":{"properties.html":{}},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"properties.html":{}}}],["provided",{"_index":249,"title":{},"body":{"license.html":{}}}],["publish",{"_index":231,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":259,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":40,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["redis",{"_index":135,"title":{},"body":{"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["redis_config",{"_index":12,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["redis_config.connection_config",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_config.key_prefix",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis_connection_config",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redissdk",{"_index":136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redissdkconfig",{"_index":22,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{}}}],["regexp(`${debug_id}:([a",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["region",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":294,"title":{},"body":{"properties.html":{}}}],["resources",{"_index":194,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":224,"title":{},"body":{"license.html":{}}}],["results",{"_index":24,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rewrap",{"_index":58,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["rights",{"_index":227,"title":{},"body":{"license.html":{}}}],["rsakeyobject",{"_index":302,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["save",{"_index":199,"title":{},"body":{"index.html":{}}}],["sell",{"_index":235,"title":{},"body":{"license.html":{}}}],["service",{"_index":46,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["setaeskey",{"_index":131,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["setaeskey(encryptedkey",{"_index":170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setencryptedprivatekey",{"_index":132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["setencryptedprivatekey(clientid",{"_index":172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setprivatekey",{"_index":133,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["setprivatekey(clientid",{"_index":174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setpublickey",{"_index":134,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["setpublickey(clientid",{"_index":175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shall",{"_index":245,"title":{},"body":{"license.html":{}}}],["software",{"_index":220,"title":{},"body":{"license.html":{}}}],["src/.../apicrypto.ts",{"_index":157,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../debug.ts",{"_index":306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.ts",{"_index":307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../internal.ts",{"_index":158,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../keymanager.ts",{"_index":155,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../redis.ts",{"_index":156,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":301,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/apicrypto.ts",{"_index":83,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/apicryptoerror.ts",{"_index":32,"title":{},"body":{"classes/ApiCryptoError.html":{},"coverage.html":{}}}],["src/config.ts",{"_index":97,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/debug.ts",{"_index":100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/errors.ts",{"_index":107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/internal.ts",{"_index":111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/keymanager.ts",{"_index":121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/redis.ts",{"_index":127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/types.ts",{"_index":5,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":189,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":82,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["static_aes_key",{"_index":13,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["static_private_key",{"_index":14,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["static_public_key",{"_index":15,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":73,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{}}}],["statuscode",{"_index":47,"title":{},"body":{"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":240,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":233,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":247,"title":{},"body":{"license.html":{}}}],["table",{"_index":139,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":138,"title":{},"body":{"coverage.html":{}}}],["team",{"_index":210,"title":{},"body":{"license.html":{}}}],["thrown",{"_index":37,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["tort",{"_index":271,"title":{},"body":{"license.html":{}}}],["true",{"_index":63,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ApiCryptoConfig.html":{},"interfaces/ApiCryptoDebug.html":{},"classes/ApiCryptoError.html":{},"interfaces/ApiCryptoErrorMap.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":297,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["understanding",{"_index":60,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["use",{"_index":228,"title":{},"body":{"license.html":{}}}],["using",{"_index":286,"title":{},"body":{"properties.html":{}}}],["validateclient",{"_index":185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":62,"title":{},"body":{"classes/ApiCryptoError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["variable",{"_index":93,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":304,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":281,"title":{},"body":{"properties.html":{}}}],["warranties",{"_index":255,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":250,"title":{},"body":{"license.html":{}}}],["whether",{"_index":268,"title":{},"body":{"license.html":{}}}],["whose",{"_index":35,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["without",{"_index":223,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":57,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["yes",{"_index":56,"title":{},"body":{"classes/ApiCryptoError.html":{}}}],["z0",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ApiCryptoConfig.html":{"url":"interfaces/ApiCryptoConfig.html","title":"interface - ApiCryptoConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiCryptoConfig\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CLIENT_IDS\n                                        \n                                \n                                \n                                        \n                                            KEY_ROTATION_IN_DAYS\n                                        \n                                \n                                \n                                        \n                                            KMS_CONFIG\n                                        \n                                \n                                \n                                        \n                                            MODE\n                                        \n                                \n                                \n                                        \n                                            REDIS_CONFIG\n                                        \n                                \n                                \n                                        \n                                            STATIC_AES_KEY\n                                        \n                                \n                                \n                                        \n                                            STATIC_PRIVATE_KEY\n                                        \n                                \n                                \n                                        \n                                            STATIC_PUBLIC_KEY\n                                        \n                                \n                                \n                                        \n                                            TYPE\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CLIENT_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CLIENT_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        KEY_ROTATION_IN_DAYS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        KEY_ROTATION_IN_DAYS:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        KMS_CONFIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        KMS_CONFIG:     KmsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     KmsConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MODE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        MODE:         ApiCryptoModes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiCryptoModes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        REDIS_CONFIG\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        REDIS_CONFIG:         RedisSdkConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RedisSdkConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        STATIC_AES_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STATIC_AES_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        STATIC_PRIVATE_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STATIC_PRIVATE_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        STATIC_PUBLIC_KEY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        STATIC_PUBLIC_KEY:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TYPE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TYPE:         ApiCryptoTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiCryptoTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCryptoDebug.html":{"url":"interfaces/ApiCryptoDebug.html","title":"interface - ApiCryptoDebug","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiCryptoDebug\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            disableCrypto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableCrypto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCrypto:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiCryptoError.html":{"url":"classes/ApiCryptoError.html","title":"class - ApiCryptoError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiCryptoError\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ApiCryptoError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class whose instance is thrown in case of any error.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _isApiCryptoError\n                            \n                            \n                                    Readonly\n                                _isCustomError\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                    Readonly\n                                service\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e?: any, eMap?: ApiCryptoErrorMap)\n                    \n                \n\n                \n                    \n                            Creates an instance of ApiCryptoError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Any Error instance to wrap with ApiCryptoError.\n\n                                                        \n                                                \n                                                \n                                                        eMap\n                                                  \n                                                        \n                                                                        ApiCryptoErrorMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                ApiCryptoErrorMap to rewrap error for better understanding.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isApiCryptoError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a ApiCryptoError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _isCustomError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n\n            \n                \n                    Flag to identify if error is a custom error.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n            \n                \n                    Error object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error Code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Error's message string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n            \n                \n                    Node project from which Error is thrown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n            \n                \n                    HTTP status code associated with the error.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiCryptoErrorMap.html":{"url":"interfaces/ApiCryptoErrorMap.html","title":"interface - ApiCryptoErrorMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiCryptoErrorMap\n\n\n\n        \n            Documentation\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/TYPES.ts\n        \n\n\n            \n                Description\n            \n            \n                Error mapping for customizing error messages and codes in ApiCrypto.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom error code string for ApiCryptoError instance.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom message string for ApiCryptoError instance.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom HTTP status code for ApiCryptoError instance.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            _validateClientId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            decryptData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            decryptKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            encryptData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            getPublicKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            function\n            initialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            variable\n            ApiCrypto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            variable\n            customValidateClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCrypto.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ApiCryptoError.ts\n            \n            class\n            ApiCryptoError\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/CONFIG.ts\n            \n            variable\n            CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/CONFIG.ts\n            \n            variable\n            errorLogFunc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            DEBUG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            DEBUG_ENABLED_FEATURES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            DEBUG_ID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            debugAll\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            debugFeatures\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            debugFeaturesList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/DEBUG.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ERRORS.ts\n            \n            variable\n            INVALID_CLIENT_ID_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ERRORS.ts\n            \n            variable\n            MISSING_ENCRYPTED_AES_KEY_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ERRORS.ts\n            \n            variable\n            PRIVATE_KEY_NOT_FOUND_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/INTERNAL.ts\n            \n            function\n            constantGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ApiCryptoConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ApiCryptoDebug\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            interface\n            ApiCryptoErrorMap\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            variable\n            API_CRYPTO_MODES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            variable\n            API_CRYPTO_TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            variable\n            DEBUG_FEATURES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            variable\n            MODES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/TYPES.ts\n            \n            variable\n            TYPES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            function\n            _generateKeyPairAndCache\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            function\n            getAesKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            function\n            getPrivateKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            function\n            getPublicKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            function\n            initialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            variable\n            KeyManager\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            variable\n            kms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/KeyManager.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            _getKeyRoationExpiry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            _getPlaintextKeyExpiry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            getAesKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            getEncryptedPrivateKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            getPrivateKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            getPublicKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            initialize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            setAesKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            setEncryptedPrivateKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            setPrivateKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            function\n            setPublicKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            variable\n            Redis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            variable\n            redisSdk\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/Redis.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @am92/aes-crypto : ^2.0.0\n        \n            @am92/jose-crypto : ^2.0.5\n        \n            @am92/kms : ^2.0.3\n        \n            @am92/redis : ^2.0.4\n        \n            moment : ^2.30.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _generateKeyPairAndCache   (src/.../KeyManager.ts)\n                        \n                        \n                            _getKeyRoationExpiry   (src/.../Redis.ts)\n                        \n                        \n                            _getPlaintextKeyExpiry   (src/.../Redis.ts)\n                        \n                        \n                            _validateClientId   (src/.../ApiCrypto.ts)\n                        \n                        \n                            constantGenerator   (src/.../INTERNAL.ts)\n                        \n                        \n                            decryptData   (src/.../ApiCrypto.ts)\n                        \n                        \n                            decryptKey   (src/.../ApiCrypto.ts)\n                        \n                        \n                            encryptData   (src/.../ApiCrypto.ts)\n                        \n                        \n                            getAesKey   (src/.../KeyManager.ts)\n                        \n                        \n                            getAesKey   (src/.../Redis.ts)\n                        \n                        \n                            getEncryptedPrivateKey   (src/.../Redis.ts)\n                        \n                        \n                            getPrivateKey   (src/.../KeyManager.ts)\n                        \n                        \n                            getPrivateKey   (src/.../Redis.ts)\n                        \n                        \n                            getPublicKey   (src/.../ApiCrypto.ts)\n                        \n                        \n                            getPublicKey   (src/.../KeyManager.ts)\n                        \n                        \n                            getPublicKey   (src/.../Redis.ts)\n                        \n                        \n                            initialize   (src/.../ApiCrypto.ts)\n                        \n                        \n                            initialize   (src/.../KeyManager.ts)\n                        \n                        \n                            initialize   (src/.../Redis.ts)\n                        \n                        \n                            setAesKey   (src/.../Redis.ts)\n                        \n                        \n                            setEncryptedPrivateKey   (src/.../Redis.ts)\n                        \n                        \n                            setPrivateKey   (src/.../Redis.ts)\n                        \n                        \n                            setPublicKey   (src/.../Redis.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/KeyManager.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _generateKeyPairAndCache\n                        \n                    \n                \n            \n            \n                \n_generateKeyPairAndCache(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAesKey\n                        \n                    \n                \n            \n            \n                \ngetAesKey(encryptedAesKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                encryptedAesKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateKey\n                        \n                    \n                \n            \n            \n                \ngetPrivateKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPublicKey\n                        \n                    \n                \n            \n            \n                \ngetPublicKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n\n\n        \n    \n    src/lib/Redis.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _getKeyRoationExpiry\n                        \n                    \n                \n            \n            \n                \n_getKeyRoationExpiry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _getPlaintextKeyExpiry\n                        \n                    \n                \n            \n            \n                \n_getPlaintextKeyExpiry()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAesKey\n                        \n                    \n                \n            \n            \n                \ngetAesKey(encryptedKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                encryptedKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncryptedPrivateKey\n                        \n                    \n                \n            \n            \n                \ngetEncryptedPrivateKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateKey\n                        \n                    \n                \n            \n            \n                \ngetPrivateKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPublicKey\n                        \n                    \n                \n            \n            \n                \ngetPublicKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAesKey\n                        \n                    \n                \n            \n            \n                \nsetAesKey(encryptedKey: string, plaintextKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                encryptedKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                plaintextKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEncryptedPrivateKey\n                        \n                    \n                \n            \n            \n                \nsetEncryptedPrivateKey(clientId: string, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPrivateKey\n                        \n                    \n                \n            \n            \n                \nsetPrivateKey(clientId: string, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPublicKey\n                        \n                    \n                \n            \n            \n                \nsetPublicKey(clientId: string, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/ApiCrypto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _validateClientId\n                        \n                    \n                \n            \n            \n                \n_validateClientId(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decryptData\n                        \n                    \n                \n            \n            \n                \ndecryptData(payload: string, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decryptKey\n                        \n                    \n                \n            \n            \n                \ndecryptKey(clientId: string, ciphertextKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                        \n                                                ciphertextKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encryptData\n                        \n                    \n                \n            \n            \n                \nencryptData(data: any, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPublicKey\n                        \n                    \n                \n            \n            \n                \ngetPublicKey(clientId: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(validateClient: ClientValidator)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                validateClient\n                                            \n                                                            ClientValidator\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    customValidateClient\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/INTERNAL.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        constantGenerator\n                        \n                    \n                \n            \n            \n                \nconstantGenerator(values)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                values\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@am92/api-crypto\n \n \n \n \n\n\n\n\nTable of Content\n\nInstallation\nContributors\nResources\nLicense\n\n\n\nInstallation\nExample :$ npm install --save @am92/api-crypto\n\nContributors\n\n  \n    \n      \n        \n          \n          \n          Ankit Gandhi\n        \n      \n      \n        \n          \n          \n          Mehul Agarwal\n        \n      \n    \n  \n\n\n\n\nResources\n\nJOSE Crypto\nRedis\nKms\nAES Crypto\n\n\n\nLicense\n\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Ankit Mehul Team Account\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.1\n        \n            Description : API Encryption and Decryption using JOSE JWE or AES-256-CBC\n        \n            Keywords : jose, aes, crypto, node crypto, api crypto, kms, redis\n        \n            Homepage : https://github.com/heliumtank92/am92-api-crypto#readme\n        \n            License : MIT\n        \n            Repository : git@github.com:heliumtank92/am92-api-crypto.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AesKeyObject   (src/.../INTERNAL.ts)\n                        \n                        \n                            ApiCryptoDebugFeatures   (src/.../TYPES.ts)\n                        \n                        \n                            ApiCryptoModes   (src/.../TYPES.ts)\n                        \n                        \n                            ApiCryptoTypes   (src/.../TYPES.ts)\n                        \n                        \n                            ClientValidator   (src/.../TYPES.ts)\n                        \n                        \n                            RsaKeyObject   (src/.../INTERNAL.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/INTERNAL.ts\n    \n    \n        \n            \n                \n                    \n                    AesKeyObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RsaKeyObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/TYPES.ts\n    \n    \n        \n            \n                \n                    \n                    ApiCryptoDebugFeatures\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiCryptoModes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiCryptoTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientValidator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_CRYPTO_MODES   (src/.../TYPES.ts)\n                        \n                        \n                            API_CRYPTO_TYPES   (src/.../TYPES.ts)\n                        \n                        \n                            ApiCrypto   (src/.../ApiCrypto.ts)\n                        \n                        \n                            CONFIG   (src/.../CONFIG.ts)\n                        \n                        \n                            customValidateClient   (src/.../ApiCrypto.ts)\n                        \n                        \n                            DEBUG   (src/.../DEBUG.ts)\n                        \n                        \n                            DEBUG_ENABLED_FEATURES   (src/.../DEBUG.ts)\n                        \n                        \n                            DEBUG_FEATURES   (src/.../TYPES.ts)\n                        \n                        \n                            DEBUG_ID   (src/.../DEBUG.ts)\n                        \n                        \n                            debugAll   (src/.../DEBUG.ts)\n                        \n                        \n                            debugFeatures   (src/.../DEBUG.ts)\n                        \n                        \n                            debugFeaturesList   (src/.../DEBUG.ts)\n                        \n                        \n                            errorLogFunc   (src/.../CONFIG.ts)\n                        \n                        \n                            INVALID_CLIENT_ID_ERROR   (src/.../ERRORS.ts)\n                        \n                        \n                            KeyManager   (src/.../KeyManager.ts)\n                        \n                        \n                            kms   (src/.../KeyManager.ts)\n                        \n                        \n                            MISSING_ENCRYPTED_AES_KEY_ERROR   (src/.../ERRORS.ts)\n                        \n                        \n                            MODES   (src/.../TYPES.ts)\n                        \n                        \n                            PRIVATE_KEY_NOT_FOUND_ERROR   (src/.../ERRORS.ts)\n                        \n                        \n                            Redis   (src/.../Redis.ts)\n                        \n                        \n                            redisSdk   (src/.../Redis.ts)\n                        \n                        \n                            TYPES   (src/.../TYPES.ts)\n                        \n                        \n                               (src/.../ApiCrypto.ts)\n                        \n                        \n                               (src/.../DEBUG.ts)\n                        \n                        \n                               (src/.../KeyManager.ts)\n                        \n                        \n                               (src/.../Redis.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/TYPES.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_CRYPTO_MODES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : constantGenerator([...MODES])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        API_CRYPTO_TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : constantGenerator([...TYPES])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEBUG_FEATURES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoDebugFeatures[]\n\n                    \n                \n                \n                    \n                        Default value : ['disableCrypto']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MODES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['DISABLED', 'STATIC', 'DYNAMIC'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['JOSE', 'AES'] as const\n                    \n                \n\n\n        \n    \n\n    src/ApiCrypto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCrypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  initialize,\n  getPublicKey,\n  decryptKey,\n  encryptData,\n  decryptData\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customValidateClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClientValidator\n\n                    \n                \n                \n                    \n                        Default value : async () => false\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONFIG\n                    \n                \n\n\n        \n    \n\n    src/CONFIG.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  MODE: API_CRYPTO_MODE as ApiCryptoModes,\n  TYPE: API_CRYPTO_TYPE as ApiCryptoTypes,\n  CLIENT_IDS: API_CRYPTO_CLIENT_IDS.split(','),\n  STATIC_AES_KEY: API_CRYPTO_STATIC_AES_KEY,\n  STATIC_PUBLIC_KEY: API_CRYPTO_STATIC_PUBLIC_KEY,\n  STATIC_PRIVATE_KEY: API_CRYPTO_STATIC_PRIVATE_KEY,\n  KEY_ROTATION_IN_DAYS: INT_CONFIG.API_CRYPTO_KEY_ROTATION_IN_DAYS || 1,\n\n  KMS_CONFIG: {\n    TYPE: API_CRYPTO_KMS_TYPE,\n    MASTER_KEY_HEX: API_CRYPTO_KMS_MASTER_KEY_HEX,\n    MASTER_IV_HEX: API_CRYPTO_KMS_MASTER_IV_HEX,\n    AWS_KEY_ID: API_CRYPTO_KMS_AWS_KEY_ID,\n    AWS_CONNECTION_CONFIG: {\n      region: API_CRYPTO_KMS_AWS_REGION\n    }\n  },\n\n  REDIS_CONFIG: {\n    CONNECTION_CONFIG:\n      REDIS_CONNECTION_CONFIG || REDIS_CONFIG.CONNECTION_CONFIG,\n    KEY_PREFIX: API_CRYPTO_REDIS_KEY_PREFIX || REDIS_CONFIG.KEY_PREFIX\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorLogFunc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console.fatal || console.error\n                    \n                \n\n\n        \n    \n\n    src/DEBUG.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEBUG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoDebug\n\n                    \n                \n                \n                    \n                        Default value : {\n  disableCrypto: false\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEBUG_ENABLED_FEATURES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEBUG_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'apiCrypto'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugAll\n                        \n                    \n                \n            \n                \n                    \n                        Default value : debug === '*' || debug?.includes(`${DEBUG_ID}:*`)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugFeatures\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new RegExp(`${DEBUG_ID}:([A-Za-z0-9,]*);?`).exec(debug)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugFeaturesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ((debugFeatures && debugFeatures[1]) ||\n  []) as Partial\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env\n                    \n                \n\n\n        \n    \n\n    src/ERRORS.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INVALID_CLIENT_ID_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoErrorMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  message: 'Invalid Client Id',\n  statusCode: 400,\n  errorCode: 'ApiCrypto::INVALID_CLIENT_ID'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MISSING_ENCRYPTED_AES_KEY_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoErrorMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  message: 'Missing Encrypted Aes Key',\n  statusCode: 400,\n  errorCode: 'ApiCrypto::MISSING_ENCRYPTED_AES_KEY'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PRIVATE_KEY_NOT_FOUND_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApiCryptoErrorMap\n\n                    \n                \n                \n                    \n                        Default value : {\n  message: 'Private Key Not Found',\n  statusCode: 400,\n  errorCode: 'ApiCrypto::PRIVATE_KEY_NOT_FOUND'\n}\n                    \n                \n\n\n        \n    \n\n    src/lib/KeyManager.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KeyManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  initialize,\n  getPublicKey,\n  getPrivateKey,\n  getAesKey\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AwsKms | NodeKms\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONFIG\n                    \n                \n\n\n        \n    \n\n    src/lib/Redis.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  initialize,\n  getPublicKey,\n  setPublicKey,\n  getPrivateKey,\n  setPrivateKey,\n  getEncryptedPrivateKey,\n  setEncryptedPrivateKey,\n  setAesKey,\n  getAesKey\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redisSdk\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisSdk\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : CONFIG\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
